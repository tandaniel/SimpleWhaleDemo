name: ECS Starter CD Develop

on:
  push:
    branches: [ main ]

jobs:

  build:
    name: Build image
    runs-on: ubuntu-latest
    
    steps:
    - name: Check Out Repo 
      uses: actions/checkout@v2

    - name: Get branch name
      id: vars
      run: echo ::set-output name=stage::${GITHUB_REF#refs/*/}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: simple_whale_demo
        AWS_REGION: ${{ secrets.AWS_REGION }}
        IMAGE_TAG: ${{ github.sha }}        
      run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
    
    - name: List files
      run: ls -R

    - name: Render Amazon ECS task definition
      id: simple_whale_demo-container
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: task-definition
        container-name: simple_whale_demo
        image: ${{ steps.build-image.outputs.image }}
    

    - name: Deploy to Amazon ECS service
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: task-definition/dev.json
        service: simple_whale_demo
        cluster: simple_whale_demo

    - name: Logout of Amazon ECR
      if: always()
      run: docker logout ${{ steps.login-ecr.outputs.registry }}
